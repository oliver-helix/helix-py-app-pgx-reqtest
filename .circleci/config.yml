# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Use a package of configuration called an orb, see https://circleci.com/docs/2.0/orb-intro/
orbs:
  # aws-cli: circleci/aws-cli@2.0.0
  aws-assume-role: holdaraffle/aws-assume-role@0.0.10

executors:
  default:
    docker:
      - image: circleci/python:3.5.7
          environment:
            DOCKER_TAG_BASE: 820411415250.dkr.ecr.us-east-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
            DOCKER_TAG: ${DOCKER_TAG_BASE}:${CIRCLE_SHA1}
            DOCKER_TAG_LATEST: ${DOCKER_TAG_BASE}:latest

# Define a job to be invoked later in a workflow. See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    description: Builds the Docker image
    executor: default
    steps:
      - checkout
      - setup_remote_docker
  
      - attach_workspace: &tmp_workspace
          at: /tmp/workspace
      
      - aws-assume-role/assume_role: &assume_role
          profile_name: ${ASSUME_AWS_PROFILE} # from context: ci
          account: ${AWS_ACCOUNT_ID} # from context: ci
          role: ${ASSUME_AWS_PROFILE} # from context: ci

      - run: &ecr_login
          name: AWS ECR Login
          command: |
            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} --profile ${ASSUME_AWS_PROFILE} | \
            docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      - run:
          name: Build Docker Image
          command: |
            set -x
            docker build --build-arg PGX_DOCKER_TAG=4.0.4 -t ${DOCKER_TAG_BASE} .
            docker tag ${DOCKER_TAG_BASE} ${DOCKER_TAG}
            docker tag ${DOCKER_TAG} ${DOCKER_TAG_LATEST}

  push-image:
      description: Pushes Docker image.
      executor: default
      steps:
        - checkout
        - setup_remote_docker
      
        - attach_workspace:
            <<: *tmp_workspace

        - aws-assume-role/assume_role:
            <<: *assume_role

        # # Running orbs
        # - aws-cli/setup

        - run:
            <<: *ecr_login

      - run:
          name: Push Docker Image to AWS ECR
          command: |
            set -x
            docker push ${DOCKER_TAG}
            docker push ${DOCKER_TAG_LATEST}

  test:
    description: Run pytest and integration test.
    executor: default
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Run pytest
          # /pgx-verification defined as WORKDIR in Dockerfile
          command: |
            docker run ${CIRCLE_PROJECT_REPONAME} sh -c \
            "cd /pgx-verification && pytest"

      - run:
          name: Run integration_test.sh
          command: |
            docker run ${CIRCLE_PROJECT_REPONAME} sh -c \
            "cd /pgx-verification && bash integration_test.sh"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  main:
    jobs:
      - build:
          name: Build
          context: basic
          filters: &tag-only
            tags:
              only: /.*/
      # - test:
      #     name: Test
      #     context: basic
      #     filters:
      #       <<: *tag-only
      #     requires:
      #       - Build
      #       - Push
      - push-image:
          name: Push
          context: basic
          filters:
            <<: *tag-only
            # branches:
            #   only: main
          requires: 
            - Build
